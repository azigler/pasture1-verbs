@create $root_class named @paranoid database:@paranoid database,paranoid
@verb #80:"ensure_props_exist" this none this
@program #80:ensure_props_exist
"*Must* be called with PDATA first, and LINES second.";
if ((caller != this) && (!caller_perms().wizard))
  return E_PERM;
else
  try
    this.(args[2]);
  except (E_PROPNF)
    add_property(this, args[2], {}, {$hacker, ""});
  endtry
  try
    this.(args[3]);
  except (E_PROPNF)
    add_property(this, args[3], 5, {$hacker, ""});
  endtry
endif
.

@verb #80:"init_for_core" this none this
@program #80:init_for_core
if (!caller_perms().wizard)
  return;
else
  for x in (properties(this))
    if (x[1] == "#")
      delete_property(this, x);
    endif
    $command_utils:suspend_if_needed(0);
  endfor
  pass(@args);
endif
.

@verb #80:"add_data" this none this
@program #80:add_data
{who, newdata} = args;
if (is_player(who) && caller_perms().wizard)
  "if ($perm_utils:controls(caller_perms(), who) && is_player(who))";
  d = tostr(who, "pdata");
  l = tostr(who, "lines");
  this:ensure_props_exist(who, d, l);
  data = this.(d);
  lines = this.(l);
  "Icky G7 code copied straight out of $player:tell.";
  if (((len = length(this.(d) = {@data, newdata})) * 2) > (lines * 3))
    this.(d) = this.(d)[(len - lines) + 1..len];
  endif
else
  return E_PERM;
endif
.

@verb #80:"get_data" this none this
@program #80:get_data
who = args[1];
if ($perm_utils:controls(caller_perms(), who))
  d = tostr(who, "pdata");
  if (typeof(`this.(d) ! ANY') == LIST)
    return this.(d);
  else
    return {};
  endif
else
  return E_PERM;
endif
.

@verb #80:"erase_data" this none this
@program #80:erase_data
who = args[1];
if ($perm_utils:controls(caller_perms(), who))
  d = tostr(who, "pdata");
  "OK if this would toss its cookies if no prop, no damage.";
  `this.(d) = {} ! ANY';
else
  return E_PERM;
endif
.

@verb #80:"set_kept_lines" this none this
@program #80:set_kept_lines
maximum = this.max_lines;
who = args[1];
if ($perm_utils:controls(caller_perms(), who) && is_player(who))
  l = tostr(who, "lines");
  this:ensure_props_exist(who, l, l);
  kept = min(args[2], maximum);
  this.(l) = kept;
  return kept;
else
  return E_PERM;
endif
.

@verb #80:"gc" this none this
@program #80:gc
if ((((caller != this) && (caller_perms() != #-1)) && (caller_perms() != player)) || (!player.wizard))
  $error:raise(E_PERM);
endif
threshold = ((60 * 60) * 24) * 3;
for x in (properties(this))
  if (x[1] == "#")
    l = length(x);
    who = toobj(x[1..l - 5]);
    if (((!valid(who)) || (!is_player(who))) || (!this:is_paranoid(who)))
      delete_property(this, x);
    else
      if (index(x, "lines"))
        if (typeof(this.(x)) != INT)
          this.(x) = 10;
        endif
      elseif (index(x, "pdata"))
        if (((!$object_utils:connected(who)) && (who.last_disconnect_time < (time() - threshold))) && (who.last_connect_time < (time() - threshold)))
          this.(x) = {};
        endif
        if (typeof(this.(x)) != LIST)
          this.(x) = {};
        endif
      endif
    endif
  endif
  $command_utils:suspend_if_needed(0);
endfor
.

@verb #80:"help_msg" this none this rxd #2
@program #80:help_msg
return this:description();
.

@verb #80:"semiweeklyish" this none this rxd #2
@program #80:semiweeklyish
if (!caller_perms().wizard)
  return E_PERM;
else
  threedays = (3 * 24) * 3600;
  fork ((((7 * 60) * 60) + threedays) - (time() % threedays))
    this:(verb)();
  endfork
  this:gc();
endif
.

@verb #80:"is_paranoid" this none this rxd #2
@program #80:is_paranoid
"Some people make their .paranoid !r.  Wizardly verb to retrieve value.";
return `args[1].paranoid ! ANY';
.

@prop #80."max_lines" 30 r #2
@prop #80."#133lines" 30 ""
@prop #80."#133pdata" {} ""
;;#80.("#133pdata") = {{{{#135, "keep_alive", #128, #135, #128, 2}, {#134, "check_cron_tasks", #128, #134, #128, 22}, {#128, "<cmd-line>", #128}}, {"#$#keep_alive"}}, {{{#135, "keep_alive", #128, #135, #128, 2}, {#134, "check_cron_tasks", #128, #134, #128, 22}, {#128, "<cmd-line>", #128}}, {"#$#keep_alive"}}, {{{#130, "afk", #2, #130, #133, 6}, {#0, "do_command", #2, #0, #133, 5}, {#133, "<cmd-line>", #133}}, {"You're no longer AFK!"}}, {{{#137, "look_self", #2, #3, #133, 2}, {#137, "l", #2, #3, #133, 2}, {#133, "<cmd-line>", #133}}, {"before a cavern"}}, {{{#137, "look_self", #2, #1, #133, 5}, {#137, "look_self", #2, #3, #133, 4}, {#137, "l", #2, #3, #133, 2}, {#133, "<cmd-line>", #133}}, {"You see nothing special."}}, {{{#137, "tell_contents", #2, #3, #133, 41}, {#137, "look_self", #2, #3, #133, 6}, {#137, "l", #2, #3, #133, 2}, {#133, "<cmd-line>", #133}}, {"You see ", "a gigantic descriptionless spaghetti monster, a fork equipped spaghetti thug, and A folded hamburger", " here."}}, {{{#137, "tell_contents", #2, #3, #133, 53}, {#137, "look_self", #2, #3, #133, 6}, {#137, "l", #2, #3, #133, 2}, {#133, "<cmd-line>", #133}}, {"south", " (", #144, ") leads to ", "The First Room", " (", #62, ") via {", "south", "}."}}, {{{#137, "tell_contents", #2, #3, #133, 53}, {#137, "look_self", #2, #3, #133, 6}, {#137, "l", #2, #3, #133, 2}, {#133, "<cmd-line>", #133}}, {"cave", " (", #142, ") leads to ", "Cavern of tests.", " (", #141, ") via {", "cave", "}."}}, {{{#99, "show_who_listing", #98, #99, #133, 122}, {#133, "who", #98, #100, #133, 9}, {#133, "<cmd-line>", #133}}, {"Player name               Connected    Idle time    Location"}}, {{{#99, "show_who_listing", #98, #99, #133, 122}, {#133, "who", #98, #100, #133, 9}, {#133, "<cmd-line>", #133}}, {"-----------               ---------    ---------    --------"}}, {{{#99, "show_who_listing", #98, #99, #133, 122}, {#133, "who", #98, #100, #133, 9}, {#133, "<cmd-line>", #133}}, {"caranov (#133)            2 hours      0 seconds    Before a cavern"}}, {{{#99, "show_who_listing", #98, #99, #133, 122}, {#133, "who", #98, #100, #133, 9}, {#133, "<cmd-line>", #133}}, {"rain (#147) [AFK]         16 hours     28 minutes   The First Room"}}, {{{#99, "show_who_listing", #98, #99, #133, 122}, {#133, "who", #98, #100, #133, 9}, {#133, "<cmd-line>", #133}}, {"Lindsey (#146) [AFK]      22 hours     an hour      The First Room"}}, {{{#99, "show_who_listing", #98, #99, #133, 122}, {#133, "who", #98, #100, #133, 9}, {#133, "<cmd-line>", #133}}, {"Saeed (#128)              5 days       7 hours      The First Room"}}, {{{#99, "show_who_listing", #98, #99, #133, 122}, {#133, "who", #98, #100, #133, 9}, {#133, "<cmd-line>", #133}}, {"lisdude (#139) [AFK]      5 days       11 hours     The First Room"}}, {{{#99, "show_who_listing", #98, #99, #133, 122}, {#133, "who", #98, #100, #133, 9}, {#133, "<cmd-line>", #133}}, {""}}, {{{#99, "show_who_listing", #98, #99, #133, 122}, {#133, "who", #98, #100, #133, 9}, {#133, "<cmd-line>", #133}}, {"Total: 5 players, 1 of whom has been active recently."}}, {{{#185, "look_self", #2, #1, #133, 3}, {#185, "look_self", #2, #8, #133, 1}, {#137, "l", #2, #3, #133, 14}, {#133, "<cmd-line>", #133}}, {"This biscuit-coloured biodegradable vessel is a masterpiece of streamlined efficiency, fit with snug cradles that whisk, miraculously intact, from farm to grocer to your refrigerator at home, as unblemished as the moment they were laid, fragile lily-white eggs. Sturdy enough to carry in one hand, the two sculpted knobs of protruding fibre on its base fit ingeniously into the pre-punched holes of its lid to secure a seal, the carton is pledged to fulfill its modest function and then -- duty performed, eggs eaten -- is prepared to be recycled, composted or repurposed for crafts, or used to soundproof a pervious wall. Such unassuming perfection in design is one of the quiet reliable pleasures of the whole messy human experience."}}, {{{#133, "tell_contents", #2, #6, #133, 7}, {#133, "i", #2, #6, #133, 2}, {#133, "<cmd-line>", #133}}, {"Carrying:"}}, {{{#133, "tell_contents", #2, #6, #133, 16}, {#133, "i", #2, #6, #133, 2}, {#133, "<cmd-line>", #133}}, {" generic following npc                   a voidcatcher's pole", " socials                                 the ultimate voidcatcher's rod", " a slivver of apotheosis                 a boberster"}}, {{{#133, "tell_contents", #2, #6, #133, 17}, {#133, "i", #2, #6, #133, 2}, {#133, "<cmd-line>", #133}}, {" a player which redirects any tells it receives to caranov(this is only for testing purposes)"}}, {{{#137, "look_self", #2, #3, #133, 2}, {#137, "l", #2, #3, #133, 2}, {#133, "<cmd-line>", #133}}, {"before a cavern"}}, {{{#137, "look_self", #2, #1, #133, 5}, {#137, "look_self", #2, #3, #133, 4}, {#137, "l", #2, #3, #133, 2}, {#133, "<cmd-line>", #133}}, {"You see nothing special."}}, {{{#137, "tell_contents", #2, #3, #133, 41}, {#137, "look_self", #2, #3, #133, 6}, {#137, "l", #2, #3, #133, 2}, {#133, "<cmd-line>", #133}}, {"You see ", "a gigantic descriptionless spaghetti monster, a fork equipped spaghetti thug, and A folded hamburger", " here."}}, {{{#137, "tell_contents", #2, #3, #133, 53}, {#137, "look_self", #2, #3, #133, 6}, {#137, "l", #2, #3, #133, 2}, {#133, "<cmd-line>", #133}}, {"south", " (", #144, ") leads to ", "The First Room", " (", #62, ") via {", "south", "}."}}, {{{#137, "tell_contents", #2, #3, #133, 53}, {#137, "look_self", #2, #3, #133, 6}, {#137, "l", #2, #3, #133, 2}, {#133, "<cmd-line>", #133}}, {"cave", " (", #142, ") leads to ", "Cavern of tests.", " (", #141, ") via {", "cave", "}."}}, {{{#135, "keep_alive", #128, #135, #128, 2}, {#134, "check_cron_tasks", #128, #134, #128, 22}, {#128, "<cmd-line>", #128}}, {"#$#keep_alive"}}, {{{#135, "keep_alive", #128, #135, #128, 2}, {#134, "check_cron_tasks", #128, #134, #128, 22}, {#128, "<cmd-line>", #128}}, {"#$#keep_alive"}}, {{{#130, "afk", #2, #130, #133, 10}, {#170, "auto_afk", #139, #170, #139, 15}, {#133, "<cmd-line>", #133}}, {"You're now AFK! Use the same command to toggle being back."}}, {{{#135, "keep_alive", #128, #135, #128, 2}, {#134, "check_cron_tasks", #128, #134, #128, 22}, {#128, "<cmd-line>", #128}}, {"#$#keep_alive"}}, {{{#135, "keep_alive", #128, #135, #128, 2}, {#134, "check_cron_tasks", #128, #134, #128, 22}, {#128, "<cmd-line>", #128}}, {"#$#keep_alive"}}, {{{#135, "keep_alive", #128, #135, #128, 2}, {#134, "check_cron_tasks", #128, #134, #128, 22}, {#128, "<cmd-line>", #128}}, {"#$#keep_alive"}}}
;;#80.("aliases") = {"@paranoid database", "paranoid"}
;;#80.("description") = {"", "This object stores the @paranoid data from :tell.  Normally it is not necessary to access these things directly.  All verbs are controlled by a caller_perms() check.  All data is stored in the old .responsible format.", "", ":add_data(who,data) adds one line's worth of data to the collection, trimming from the front as necessary.", "", ":get_data(who) retrieves the entire batch of data.", "", ":erase_data(who) sets the data to {}", "", ":set_kept_lines(who,number) Changes the number of kept lines.  Maximum is 20.", "", "Core verbs that call the above are this are $player:tell, @check, @paranoid, and :erase_paranoid_data.", "", "Internal:  ", "   Properties used are", "   tostr(player)+\"lines\"", "   tostr(player)+\"pdata\"", "   :ensure_props_exist(who,linesname,dataname):  creates the above", "   :GC() --- loops over all data and verifies they're for players."}
;;#80.("object_size") = {9154, 1641541193}
