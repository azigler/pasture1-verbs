@create #104 named mcp-cord:mcp-cord,cord
@verb #106:"next_id" this none this
@program #106:next_id
if (caller == this)
  return tostr("I", this.next_id = this.next_id + 1);
else
  raise(E_PERM);
endif
.

@verb #106:"cord_send" this none this rxd #2
@program #106:cord_send
{message, alist} = args;
cord = caller;
session = cord.session;
if (cord in $mcp.cord.registry)
  return this:send_(session, tostr(cord.id), message, @alist);
else
  raise(E_PERM);
endif
.

@verb #106:"cord_closed" this none this rxd #2
@program #106:cord_closed
cord = caller;
session = cord.session;
this:send_closed(session, tostr(cord.id));
.

@verb #106:"handle_" this none this
@program #106:handle_
{session, id, message, @assocs} = args;
if (caller == this)
  $mcp.cord:mcp_receive(id, message, assocs);
endif
.

@verb #106:"handle_closed" this none this
@program #106:handle_closed
{session, id, @rest} = args;
if (caller == this)
  $mcp.cord:mcp_closed(id);
endif
.

@verb #106:"find_type" this none this
@program #106:find_type
{name} = args;
for i in ($object_utils:leaves($mcp.cord.type_root))
  if (name == (($mcp.registry:package_name(i.parent_package) + "-") + i.cord_name))
    return i;
  endif
endfor
return $failed_Match;
.

@verb #106:"send_open" this none this
@program #106:send_open
if (caller == $mcp.cord)
  return pass(@args);
endif
.

@verb #106:"finalize_connection" this none this rxd #2
@program #106:finalize_connection
session = caller;
len = length($mcp.cord.registry_ids);
for i in [0..len - 1]
  idx = len - i;
  cord = $mcp.cord.registry[idx];
  if (cord.session == session)
    $recycler:_recycle(cord);
  endif
endfor
.

@verb #106:"type_name" this none this
@program #106:type_name
{cord_type} = args;
parent = $mcp:package_name(cord_type.parent_package);
if (suffix = cord_type.cord_name)
  return (parent + "-") + suffix;
else
  return parent;
endif
.

@prop #106."next_id" 1 r
@prop #106."cords" {} r
@prop #106."registry_ids" {} rc
;;#106.("messages_in") = {{"open", {"_id", "_type"}}, {"", {"_id", "_message"}}, {"closed", {"_id"}}}
;;#106.("messages_out") = {{"open", {"_id", "_type"}}, {"", {"_id", "_message"}}, {"closed", {"_id"}}}
;;#106.("aliases") = {"mcp-cord", "cord"}
;;#106.("object_size") = {7708, 1670400000}
